{"ast":null,"code":"var _jsxFileName = \"/Users/max/Desktop/work/craftframeReactJS/craftframe/src/components/LeaveARequest/StepName/StepName.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport s from './StepName.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Field, Form } from 'react-final-form';\nimport setFormData from '../services/setFormData';\nimport getFormData from '../services/getFormData';\nimport { STEPPER_FORM_DATA_KEY } from '../constants';\nimport Email from '../../../images/leaveARequest/Email.png';\nimport Telegram from '../../../images/leaveARequest/Telegram.png';\nimport Whats from '../../../images/leaveARequest/Email.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepName = () => {\n  _s();\n\n  // sessionStorage.removeItem(STEPPER_FORM_DATA_KEY);\n  const [initialValues] = useState(getFormData());\n  const onSubmit = useCallback(values => {\n    setFormData(values);\n  });\n\n  const required = value => value ? undefined : 'Required';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.StepName,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.titleSpan,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443, \\u0438 \\u043C\\u044B \\u0441 \\u0432\\u0430\\u043C\\u0438 \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.secondTitleSpan,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: s.secondTitleSpan,\n        children: \"* \\u041A\\u0430\\u043A \\u043A \\u0432\\u0430\\u043C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0430\\u0442\\u044C\\u0441\\u044F?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      initialValues: initialValues,\n      render: ({\n        handleSubmit,\n        form,\n        submitting,\n        pristine,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          className: s.field,\n          name: \"UserName\",\n          component: \"input\",\n          type: \"text\",\n          lable: \"User Name\",\n          variant: \"outlined\",\n          placeholder: \"\\u0432\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n          validate: required\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), console.log(JSON.stringify(values, 0, 2))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/stepMessanger\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.buttonStepName,\n        type: \"submit\",\n        children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.footerSpan,\n      children: \"\\u0412\\u044B \\u0442\\u0430\\u043A\\u0436\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043D\\u0430\\u043C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.secondFooterSpan,\n      children: \"\\u0441\\u0430\\u043C\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.footerImg,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StepName, \"Gk/A9MrLqip/KQOJYG4GwO+OpuI=\");\n\n_c = StepName;\nexport default StepName;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepName\");","map":{"version":3,"sources":["/Users/max/Desktop/work/craftframeReactJS/craftframe/src/components/LeaveARequest/StepName/StepName.jsx"],"names":["React","useState","useCallback","s","NavLink","Field","Form","setFormData","getFormData","STEPPER_FORM_DATA_KEY","Email","Telegram","Whats","StepName","initialValues","onSubmit","values","required","value","undefined","titleSpan","secondTitleSpan","handleSubmit","form","submitting","pristine","field","console","log","JSON","stringify","buttonStepName","footerSpan","secondFooterSpan","footerImg"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport s from './StepName.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { Field, Form } from 'react-final-form';\nimport setFormData from '../services/setFormData';\nimport getFormData from '../services/getFormData';\nimport { STEPPER_FORM_DATA_KEY } from '../constants';\nimport Email from '../../../images/leaveARequest/Email.png'\nimport Telegram from '../../../images/leaveARequest/Telegram.png'\nimport Whats from '../../../images/leaveARequest/Email.png'\n\nconst StepName = () => {\n    // sessionStorage.removeItem(STEPPER_FORM_DATA_KEY);\n    const [initialValues] = useState(getFormData());\n\n    const onSubmit = useCallback(\n        (values) => {\n            setFormData(values);\n        }\n    )\n    const required = value => (value ? undefined : 'Required')\n    return (\n        <div className={s.StepName}>\n           <div className={s.titleSpan}> <span >Оставьте заявку, и мы с вами свяжемся</span></div>\n            <div className={s.secondTitleSpan}><span className={s.secondTitleSpan}>* Как к вам обращаться?</span></div>\n            <Form\n                onSubmit={onSubmit}\n                initialValues={initialValues}\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\n                    <form onChange={handleSubmit}>\n                        <Field\n                            className={s.field}\n                            name='UserName'\n                            component='input'\n                            type='text'\n                            lable='User Name'\n                            variant='outlined'\n                            placeholder='ваше имя'\n                            validate={required}\n                        />\n                        {console.log(JSON.stringify(values, 0, 2))}\n                    </form>\n                )}\n\n            />\n            <NavLink to='/stepMessanger'><button className={s.buttonStepName} type='submit'>Далее</button></NavLink>\n       \n       <div className={s.footerSpan}>Вы также можете написать нам</div>\n       <div className={s.secondFooterSpan}>самостоятельно:</div>\n       <div className={s.footerImg}>\n           <img src={Email}></img>\n           <img src={Email}></img>\n           <img src={Email}></img>\n       </div>\n        </div>\n    );\n};\nexport default StepName;"]},"metadata":{},"sourceType":"module"}